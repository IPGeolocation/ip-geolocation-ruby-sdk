=begin
#IPGeolocation.io - IP intelligence products

#Ipgeolocation provides a set of APIs to make ip based decisions.

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IpgeolocationSdk::AstronomyApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AstronomyApi' do
  before do
    # run before each test
    @api_instance = IpgeolocationSdk::AstronomyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AstronomyApi' do
    it 'should create an instance of AstronomyApi' do
      expect(@api_instance).to be_instance_of(IpgeolocationSdk::AstronomyApi)
    end
  end

  # unit tests for get_astronomy_details
  # The Astronomy API provides the location-based rise and set times for the Sun and Moon along with the current position, distance from earth, and azimuth of the Sun and the Moon for a specific date at the queried time. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ip query paramter &#39;ip&#39;. If not provided, will be your network IP
  # @option opts [String] :location query paramter &#39;location&#39;. If not provided, will be your ip location
  # @option opts [String] :lat query paramter &#39;lat&#39;.
  # @option opts [String] :long query paramter &#39;long&#39;.
  # @option opts [String] :time_zone 
  # @option opts [String] :date The date (YYYY-MM-DD) to lookup for. default will be the current date
  # @option opts [Float] :elevation query parameter &#39;elevation&#39;
  # @option opts [String] :output Desired output format.
  # @option opts [String] :lang By default, the API responds in English. You can change the response language by passing the language code as a query parameter &#x60;lang&#x60;. Multi language feature is available only for &#x60;paid users&#x60;.
  # @return [AstronomyResponse]
  describe 'get_astronomy_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
